// Generated by view binder compiler. Do not edit!
package com.example.utsanmp_160421068.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.utsanmp_160421068.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HobbyListItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnRead;

  @NonNull
  public final ImageView image;

  @NonNull
  public final TextView txtAuthor;

  @NonNull
  public final TextView txtDescDetail;

  @NonNull
  public final TextView txtTitle;

  private HobbyListItemBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnRead,
      @NonNull ImageView image, @NonNull TextView txtAuthor, @NonNull TextView txtDescDetail,
      @NonNull TextView txtTitle) {
    this.rootView = rootView;
    this.btnRead = btnRead;
    this.image = image;
    this.txtAuthor = txtAuthor;
    this.txtDescDetail = txtDescDetail;
    this.txtTitle = txtTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HobbyListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HobbyListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.hobby_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HobbyListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRead;
      Button btnRead = ViewBindings.findChildViewById(rootView, id);
      if (btnRead == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.txtAuthor;
      TextView txtAuthor = ViewBindings.findChildViewById(rootView, id);
      if (txtAuthor == null) {
        break missingId;
      }

      id = R.id.txtDescDetail;
      TextView txtDescDetail = ViewBindings.findChildViewById(rootView, id);
      if (txtDescDetail == null) {
        break missingId;
      }

      id = R.id.txtTitle;
      TextView txtTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtTitle == null) {
        break missingId;
      }

      return new HobbyListItemBinding((ConstraintLayout) rootView, btnRead, image, txtAuthor,
          txtDescDetail, txtTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
